# Import required libraries
import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# Step 1: Upload the dataset
print("Please upload your CSV file:")
uploaded = files.upload()
file_name = list(uploaded.keys())[0]

# Step 2: Load and select required columns
required_columns = ['Patient Number', 'Neoadjuvant hormone therapy',
                    'M1', 'M3', 'M6', 'M9', 'M12', 'M15', 'M18', 'M24', 'M30', 'M36']
data = pd.read_csv(file_name)

# Validate presence of required columns
missing_cols = set(required_columns) - set(data.columns)
if missing_cols:
    raise ValueError(f"The following required columns are missing: {missing_cols}")

# Subset and clean the data
data = data[required_columns].dropna()

# Step 3: Define labels and features
labels = data['Neoadjuvant hormone therapy']  # 0 = No, 1 = Yes
features = data[['M1', 'M3', 'M6', 'M9', 'M12', 'M15', 'M18', 'M24', 'M30', 'M36']]

# Step 4: Standardize features
scaler = StandardScaler()
features_scaled = scaler.fit_transform(features)

# Step 5: Apply PCA (2D)
pca = PCA(n_components=2)
pca_result = pca.fit_transform(features_scaled)

# Step 6: Apply LDA (1D for binary classification)
lda = LDA(n_components=1)
lda_result = lda.fit_transform(features_scaled, labels)

# Step 7: Plot PCA and LDA results
fig, ax = plt.subplots(1, 2, figsize=(14, 6))

# PCA Scatter Plot
sns.scatterplot(
    x=pca_result[:, 0], y=pca_result[:, 1],
    hue=labels.map({0: "No Neoadjuvant", 1: "Neoadjuvant"}),
    palette='tab10', ax=ax[0], alpha=0.7
)
ax[0].set_title("PCA Scatter Plot (PSA Trajectories)")
ax[0].set_xlabel("Principal Component 1")
ax[0].set_ylabel("Principal Component 2")

# LDA Scatter Plot (1D projection)
sns.scatterplot(
    x=lda_result[:, 0], y=np.zeros_like(lda_result[:, 0]),
    hue=labels.map({0: "No Neoadjuvant", 1: "Neoadjuvant"}),
    palette='tab10', ax=ax[1], alpha=0.7
)
ax[1].set_title("LDA Scatter Plot (Treatment Discrimination)")
ax[1].set_xlabel("LDA Component 1")
ax[1].set_yticks([])

plt.tight_layout()
plt.show()

# Step 8: Export results to CSV
pca_df = pd.DataFrame(pca_result, columns=['PCA1', 'PCA2'])
pca_df['Neoadjuvant'] = labels.values

lda_df = pd.DataFrame(lda_result, columns=['LDA1'])
lda_df['Neoadjuvant'] = labels.values

pca_output = "PCA_PSA_Neoadjuvant.csv"
lda_output = "LDA_PSA_Neoadjuvant.csv"
pca_df.to_csv(pca_output, index=False)
lda_df.to_csv(lda_output, index=False)

print(f"PCA and LDA results have been saved as '{pca_output}' and '{lda_output}'.")
files.download(pca_output)
files.download(lda_output)
